buildscript {
    ext.buildConfig = [
            'compileSdk': 30,
            'targetSdk' : 30,
            'minSdk'    : 23,
    ]

    ext {
        android_plugin_version = '4.2.0-beta01'
        kotlin_version = "1.4.21"
        desugar_version = "1.0.9"
        spotless_version = "5.8.2"
        coroutines_version = "1.4.1"
        room_version = "2.2.5"
        serialization_version = "1.0.1"
        material_version = "1.2.1"
        hilt_version = "2.28-alpha"
        hilt_androidX_version = "1.0.0-alpha02"
        fragment_version = "1.2.5"
        lifecycle_version = "2.2.0"
        nav_version = "2.3.1"
        firebase_version = "26.1.0"
        constraint_layout_version = "2.0.4"
        core_version = "1.3.2"
        appcompat_version = "1.2.0"
        timber_version = "4.7.1"
        coil_version = "1.1.0"
        kotest_version = "4.3.1"
        mockk_version = "1.10.2"
        google_play_version = "4.3.4"
        turbine_version = "0.3.0"
        androidX_testCore_version = "1.3.0"
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jacoco:org.jacoco.core:0.8.6"
        classpath "com.google.gms:google-services:$google_play_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.diffplug.spotless" version "$spotless_version"
    id "com.github.plnice.canidropjetifier" version "0.5"
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            ktlint()
            target "**/*.kt"
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalStdlibApi"

            jvmTarget = "1.8"
        }
    }
}